{"version":3,"sources":["pages/Films.js","functions/history.js","functions/checkParam.js","functions/getData.js","functions/parseArray.js","functions/checkHrefs.js","functions/getDataFromServer.js","functions/deleteParameters.js","pages/AllPagesData.js","functions/getJSXData.js","routes/index.js","App.js","index.js"],"names":["Films","useState","films","setFilms","filterFilms","setFilterFilms","useEffect","a","axios","get","cache","res","data","results","i","length","episode_id","title","compare","b","className","type","placeholder","onChange","e","filter","film","toLowerCase","split","join","indexOf","target","value","search","onClick","sort","map","index","to","window","location","href","createBrowserHistory","checkParams","s","getData","par","param","name","id","parseArray","params","push","checkArrays","f","item","Array","isArray","getDataFromServer","character","r","obj","url","created","edited","AllPagesData","arr","setData","loading","setLoading","Object","keys","item_title","replace","charAt","toUpperCase","substr","item2","index2","color","height","width","Routers","console","log","history","path","component","exact","render","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.49a55013.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const Films = () => {\r\n\r\n    const [films, setFilms] = useState([]);\r\n    const [filterFilms, setFilterFilms] = useState([]);\r\n\r\n    useEffect(async () => {\r\n        let res = await axios.get(\"http://swapi.dev/api/\" + 'films' + \"/\", { cache: true });\r\n        res = res.data.results;\r\n        for (let i = 0; i < res.length; i++)\r\n            res[i] = { episode_id: res[i].episode_id, title: res[i].title }\r\n        setFilms(res);\r\n        setFilterFilms(res);\r\n    }, [])\r\n\r\n    const search = (e) => {\r\n        setFilterFilms(films.filter(film => film.title.toLowerCase().split(\" \").join(\"\").indexOf(e.target.value.split(\" \").join(\"\").toLowerCase()) > -1));\r\n    }\r\n\r\n    function compare(a, b) {\r\n        return a.title < b.title ? -1 : (a.title > b.title ? 1 : 0)\r\n    }\r\n\r\n    const sort = () => {\r\n        setFilterFilms([...filterFilms].sort(compare));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"grid menu-block\">\r\n                <input className=\"margin-0-auto menu-block__search\" type=\"text\" placeholder=\"search\" onChange={(e) => search(e)} />\r\n                <button className=\"margin-0-auto menu-block__sort\" onClick={() => sort()}>Sort</button>\r\n            </div>\r\n            <ul className=\"flex grid-gap grid-justify-center margin-0-auto all-films\">\r\n                {\r\n                    filterFilms.map((film, index) =>\r\n                        <li className=\"grid grid-align-center text-center film\" key={index}>\r\n                            <NavLink className=\"grid grid-align-center\" to={`${window.location.href.split(\"/\")[3] === \"#\" ? '/swapi' : \"\"}/films/${film.episode_id}`}>\r\n                                {film.title}\r\n                            </NavLink>\r\n                        </li>\r\n                    )\r\n                }\r\n            </ul>\r\n        </div>\r\n\r\n    )\r\n}","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","export const checkParams = (s) => {\r\n    switch (s) {\r\n        case \"people\":\r\n            return \"name\";\r\n        case \"films\":\r\n            return \"title\";\r\n        case \"starships\":\r\n            return \"model\";\r\n        case \"vehicles\":\r\n            return \"model\";\r\n        case \"planets\":\r\n            return \"name\";\r\n        case \"species\":\r\n            return \"name\";\r\n        case \"resident\":\r\n            return \"name\";\r\n    }\r\n}","import axios from 'axios';\r\n\r\nexport const getData = async (par, param) => {\r\n    const res = await axios.get(par, { cache: true });\r\n    return { name: res.data[param], id: par.split(\"/\")[4] + \"/\" + par.split(\"/\")[5] };\r\n}","import axios from 'axios';\r\nimport { checkParams } from './checkParam';\r\nimport { getData } from './getData';\r\n\r\nexport const parseArray = async (par) => {\r\n    const params = [];\r\n    if ( par.length === 0 )\r\n        return [];\r\n    let s = par.length > 0 ? par[0].split(\"/\")[4] : \"\";\r\n    let param = checkParams(s);\r\n    for (let i = 0; i < par.length; i++) {\r\n        const res = await getData(par[i], param);\r\n        params.push(res);\r\n    }\r\n    return params;\r\n}","import { checkParams } from \"./checkParam\";\r\nimport { getData } from \"./getData\";\r\nimport { parseArray } from \"./parseArray\";\r\n\r\nexport const checkArrays = async (f) => {\r\n    for (let item in f) {\r\n        if (Array.isArray(f[item]) && (typeof f[item][0] !== \"object\")) {\r\n            f[item] = await parseArray(f[item]);\r\n            continue;\r\n        }\r\n        if (typeof f[item] !== \"number\" && f[item] !== null) {\r\n            if (f[item].split(\"://\")[0] === \"http\") {\r\n                f[item] = [await getData(f[item], checkParams(f[item].split(\"/\")[5]))];\r\n        }\r\n        }\r\n    }\r\n}","import axios from \"axios\";\r\nimport { checkArrays } from \"./checkHrefs\";\r\nimport { deleteParameters } from \"./deleteParameters\";\r\n\r\nexport const getDataFromServer = async () => {\r\n    const character = window.location.href.split(\"/\");\r\n    const res = await axios.get(\"http://swapi.dev/api/\" + character[5] + (character[5] === \"peoples\" ? \"people\" : \"\") + \"/\" + character[6], { cache: true });\r\n    const r = res.data;\r\n    await deleteParameters(r);\r\n    await checkArrays(r);\r\n    return r;\r\n}","export const deleteParameters = ( obj ) => {\r\n    delete obj.url;\r\n    delete obj.created;\r\n    delete obj.edited;\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { getDataFromServer } from '../functions/getDataFromServer';\r\nimport { getJSXData } from '../functions/getJSXData';\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nexport const AllPagesData = () => {\r\n    const [data, setData] = useState({});\r\n    const [loading, setLoading] = useState(false);\r\n    useEffect(async () => {\r\n        setLoading(false);\r\n        setData(await getDataFromServer());\r\n        setLoading(true);\r\n    }, [window.location.href])\r\n\r\n    return (\r\n        <div>\r\n            {loading ? getJSXData(data) : <div className=\"loader\"><Loader\r\n                type=\"Oval\"\r\n                color=\"#efd91d\"\r\n                height={250}\r\n                width={250}\r\n            />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import { NavLink } from \"react-router-dom\";\r\n\r\nexport const getJSXData = (arr) => {\r\n    return (\r\n        <>\r\n            {\r\n                Object.keys(arr).map((item, index) => {\r\n                    let item_title = item.replace(/(_id)|_/, \" \");\r\n                    item_title = item_title.charAt(0).toUpperCase() + item_title.substr(1)\r\n\r\n                    return (\r\n                        <div className=\"parameter\" key={index} >\r\n                            <h2 className=\"parameter__title\">{item_title}</h2>\r\n                            {\r\n                                Array.isArray(arr[item]) && arr[item].length > 0 ?\r\n                                    arr[item].map((item2, index2) => {\r\n                                        return (\r\n                                            <NavLink className=\"parameter__link\" to={`/${window.location.href.split(\"/\")[3] === \"#\" ? 'swapi/' : \"\"}${item2.id}`} key={index2}>\r\n                                                {`${item2.name}, `}\r\n                                            </NavLink>\r\n                                        )\r\n                                    })\r\n                                    :\r\n                                    <span className=\"parameter__text\">{arr[item]}</span>\r\n\r\n                            }\r\n                        </div>)\r\n                })\r\n            }\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport { Route, Switch, Redirect, NavLink, HashRouter } from 'react-router-dom';\r\nimport { Films } from '../pages/Films';\r\nimport history from '../functions/history';\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport { AllPagesData } from '../pages/AllPagesData';\r\nconst Routers = () => {\r\n    const href = window.location.href.split(\"/\")[3] === \"#\";\r\n    console.log(href);\r\n    return (\r\n        <HashRouter history={history}>\r\n            <NavLink className=\"margin-0-auto text-center title\" to={(href ? '/swapi' : \"\") + '/films'}>star wars</NavLink>\r\n            <Switch>\r\n                <Route path={(href ? '/swapi' : \"\") + '/:path/:id'} component={AllPagesData} exact />\r\n                <Route path={(href ? '/swapi' : \"\") + '/films'} component={Films} exact />\r\n                <Route path=\"*\" render={() => <Redirect to={(href ? '/swapi' : \"\") + \"/films\"} />} />\r\n            </Switch>\r\n        </HashRouter>\r\n    )\r\n}\r\n\r\n\r\nexport default Routers;","import Routers from './routes';\n\nfunction App() {\n  return (\n    <div className=\"margin-0-auto App\">\n      <Routers />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './assets/styles/App.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}